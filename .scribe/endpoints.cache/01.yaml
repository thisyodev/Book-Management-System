## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Books API'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/books
    metadata:
      groupName: 'Books API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get list of books (paginated)'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "title": "Book Title",
                "author": "John Doe",
                "published_year": 2024,
                "genre": "Fiction"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/books
    metadata:
      groupName: 'Books API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new book'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the book.'
        required: true
        example: 'The Alchemist'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      author:
        name: author
        description: 'Author of the book.'
        required: true
        example: 'Paulo Coelho'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      published_year:
        name: published_year
        description: 'The year it was published.'
        required: false
        example: 1988
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      genre:
        name: genre
        description: 'The genre.'
        required: false
        example: Fiction
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      title: 'The Alchemist'
      author: 'Paulo Coelho'
      published_year: 1988
      genre: Fiction
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 10,
            "title": "The Alchemist",
            "author": "Paulo Coelho",
            "published_year": 1988,
            "genre": "Fiction"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/books/{id}'
    metadata:
      groupName: 'Books API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a book'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the book.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the book.'
        required: true
        example: 'The Alchemist'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      author:
        name: author
        description: 'Author of the book.'
        required: true
        example: 'Paulo Coelho'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      published_year:
        name: published_year
        description: 'The year it was published.'
        required: false
        example: 1988
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      genre:
        name: genre
        description: 'The genre.'
        required: false
        example: Fiction
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      title: 'The Alchemist'
      author: 'Paulo Coelho'
      published_year: 1988
      genre: Fiction
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "title": "The Alchemist",
            "author": "Paulo Coelho",
            "published_year": 1988,
            "genre": "Fiction"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/books/{id}'
    metadata:
      groupName: 'Books API'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a book'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the book.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Deleted"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
